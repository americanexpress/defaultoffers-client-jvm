/*
 * Global Default Offers API
 * This is the Offers API providing the default offers for partners across various applications in Acquisition portfolio
 *
 * OpenAPI spec version: 1.0
 * Contact: DAPXServices@aexp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.americanexpress.sdk.models.default_offers;

import java.util.Objects;
import java.util.Arrays;
import com.americanexpress.sdk.models.default_offers.Disclosure;
import com.americanexpress.sdk.models.default_offers.DisplayText;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Holds offer content/product content information
 */
@ApiModel(description = "Holds offer content/product content information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-28T10:45:02.623-04:00[America/New_York]")
public class Content {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DISCLOSURES = "disclosures";
  @SerializedName(SERIALIZED_NAME_DISCLOSURES)
  private List<Disclosure> disclosures = null;

  public static final String SERIALIZED_NAME_DISPLAY_TEXT = "display_text";
  @SerializedName(SERIALIZED_NAME_DISPLAY_TEXT)
  private List<DisplayText> displayText = null;

  public static final String SERIALIZED_NAME_SEQUENCE_ORDER = "sequence_order";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_ORDER)
  private Integer sequenceOrder;

  public static final String SERIALIZED_NAME_IMAGE_URL = "image_url";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public Content type(String type) {
    this.type = type;
    return this;
  }

   /**
   * type is product or offer content
   * @return type
  **/
  @ApiModelProperty(value = "type is product or offer content")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Content title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Headline for the content
   * @return title
  **/
  @ApiModelProperty(value = "Headline for the content")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Content disclosures(List<Disclosure> disclosures) {
    this.disclosures = disclosures;
    return this;
  }

  public Content addDisclosuresItem(Disclosure disclosuresItem) {
    if (this.disclosures == null) {
      this.disclosures = new ArrayList<>();
    }
    this.disclosures.add(disclosuresItem);
    return this;
  }

   /**
   * list of disclousers
   * @return disclosures
  **/
  @Valid
  @ApiModelProperty(value = "list of disclousers")
  public List<Disclosure> getDisclosures() {
    return disclosures;
  }

  public void setDisclosures(List<Disclosure> disclosures) {
    this.disclosures = disclosures;
  }

  public Content displayText(List<DisplayText> displayText) {
    this.displayText = displayText;
    return this;
  }

  public Content addDisplayTextItem(DisplayText displayTextItem) {
    if (this.displayText == null) {
      this.displayText = new ArrayList<>();
    }
    this.displayText.add(displayTextItem);
    return this;
  }

   /**
   * List of display text of a content
   * @return displayText
  **/
  @Valid
  @ApiModelProperty(value = "List of display text of a content")
  public List<DisplayText> getDisplayText() {
    return displayText;
  }

  public void setDisplayText(List<DisplayText> displayText) {
    this.displayText = displayText;
  }

  public Content sequenceOrder(Integer sequenceOrder) {
    this.sequenceOrder = sequenceOrder;
    return this;
  }

   /**
   * sequence of the content in the content group
   * @return sequenceOrder
  **/
  @ApiModelProperty(value = "sequence of the content in the content group")
  public Integer getSequenceOrder() {
    return sequenceOrder;
  }

  public void setSequenceOrder(Integer sequenceOrder) {
    this.sequenceOrder = sequenceOrder;
  }

  public Content imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * url of the image
   * @return imageUrl
  **/
  @ApiModelProperty(value = "url of the image")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Content content = (Content) o;
    return Objects.equals(this.type, content.type) &&
        Objects.equals(this.title, content.title) &&
        Objects.equals(this.disclosures, content.disclosures) &&
        Objects.equals(this.displayText, content.displayText) &&
        Objects.equals(this.sequenceOrder, content.sequenceOrder) &&
        Objects.equals(this.imageUrl, content.imageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, title, disclosures, displayText, sequenceOrder, imageUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Content {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    disclosures: ").append(toIndentedString(disclosures)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    sequenceOrder: ").append(toIndentedString(sequenceOrder)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

